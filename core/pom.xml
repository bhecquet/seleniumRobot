<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
	    <groupId>com.infotel.seleniumRobot</groupId>
	    <artifactId>core-parent-selenium4</artifactId>
	    <version>5.1.20</version>
	</parent>

  	<artifactId>core-selenium4</artifactId>
  	<packaging>jar</packaging>
  	
  	<properties>
	    <skipTests>false</skipTests>
	    <skipITs>${skipTests}</skipITs>
	    <skipUTs>${skipTests}</skipUTs>
		<skipJar>false</skipJar>
		<skipJavadoc>false</skipJavadoc>
		<argLine /> <!-- Can be used to pass JVM arguments to tests -->
	    <testng.testnames>IExplorer,IntegrationTests,PageObject</testng.testnames>
	    <testng.utTestnames>UnitTests,UnitTestsWithContext,UnitTestsWithContext2</testng.utTestnames>
	    <seleniumRobot.debug>none</seleniumRobot.debug>
	    <sonar.projectKey>bhecquet_seleniumRobot-core</sonar.projectKey>
		<surefireArgLine />
		<failsafeArgLine />
		<microsoft.kiota.version>1.8.2</microsoft.kiota.version>
	</properties>

	<repositories> 
	 	<repository>
			<snapshots>
			  	<enabled>false</enabled>
			</snapshots>
			<id>atlassian</id>
			<name>atlassian</name>
			<url>https://packages.atlassian.com/maven-public</url>
	     	</repository>
	</repositories>
	

	<dependencies>
		<dependency>
		  <groupId>com.deque.html.axe-core</groupId>
		  <artifactId>selenium</artifactId>
		  <version>4.10.1</version>
			<!-- JDK 17: exclude webdrivermanager as we don't need it-->
			<exclusions>
				<exclusion>
					<groupId>io.github.bonigarcia</groupId>
					<artifactId>webdrivermanager</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
		  <groupId>com.eatthepath</groupId>
		  <artifactId>java-otp</artifactId>
		  <version>0.4.0</version>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>com.atlassian.jira</groupId>
			<artifactId>jira-rest-java-client-app</artifactId>
			<version>5.2.7</version>
			<exclusions>
				<exclusion>
          			<groupId>org.springframework</groupId>
          			<artifactId>spring-beans</artifactId>
        		</exclusion>
        		<exclusion>
        			<groupId>org.slf4j</groupId>
    				<artifactId>slf4j-log4j12</artifactId>
        		</exclusion>
        		<exclusion>
			      <artifactId>commons-logging</artifactId>
			      <groupId>commons-logging</groupId>
			    </exclusion>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	
		<!-- dependencies from parent -->
		<dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
           <artifactId>log4j-core</artifactId>
        </dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
            <groupId>io.appium</groupId>
            <artifactId>java-client</artifactId>
        </dependency>
        <dependency>
			<groupId>org.semver4j</groupId>
			<artifactId>semver4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
		</dependency>
	    <dependency>
	      <groupId>net.java.dev.jna</groupId>
	      <artifactId>jna-platform</artifactId>
	    </dependency>
	    <dependency>
		    <groupId>org.zeroturnaround</groupId>
		    <artifactId>zt-zip</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.randelshofer</groupId>
			<artifactId>org.monte.media.screenrecorder</artifactId>
		</dependency>
		<dependency>
		    <groupId>com.konghq</groupId>
		    <artifactId>unirest-java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infotel.seleniumRobot</groupId>
			<artifactId>seleniumRobot-windows-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infotel.seleniumRobot</groupId>
			<artifactId>seleniumRobot-linux-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>com.infotel.seleniumRobot</groupId>
			<artifactId>seleniumRobot-mac-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency> 
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
        </dependency>
	    <dependency>
	      	<groupId>org.apache.poi</groupId>
	      	<artifactId>poi-ooxml</artifactId>
	      	<version>5.4.0</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
	    </dependency>
		<dependency>
			<groupId>at.datenwort.ews</groupId>
			<artifactId>de-bwl-lgl-ews-java-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.hierynomus</groupId>
			<artifactId>sshj</artifactId>
			<version>0.39.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>jakarta.mail</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.18.3</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.azure</groupId>
			<artifactId>msal4j</artifactId>
			<version>1.19.0</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.graph</groupId>
			<artifactId>microsoft-graph</artifactId>
			<version>6.30.1</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.graph</groupId>
			<artifactId>microsoft-graph-core</artifactId>
			<version>3.6.1</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-identity</artifactId>
			<version>1.15.3</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.kiota</groupId>
			<artifactId>microsoft-kiota-abstractions</artifactId>
			<version>${microsoft.kiota.version}</version>
			<exclusions>
				<exclusion>
					<!-- Already provided by selenium-->
					<groupId>io.opentelemetry</groupId>
					<artifactId>opentelemetry-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.microsoft.kiota</groupId>
			<artifactId>microsoft-kiota-authentication-azure</artifactId>
			<version>${microsoft.kiota.version}</version>
			<exclusions>
				<exclusion>
					<!-- Already provided by selenium-->
					<groupId>io.opentelemetry</groupId>
					<artifactId>opentelemetry-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.microsoft.kiota</groupId>
			<artifactId>microsoft-kiota-http-okHttp</artifactId>
			<version>${microsoft.kiota.version}</version>
			<exclusions>
				<exclusion>
					<!-- Already provided by selenium-->
					<groupId>io.opentelemetry</groupId>
					<artifactId>opentelemetry-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.microsoft.kiota</groupId>
			<artifactId>microsoft-kiota-serialization-json</artifactId>
			<version>${microsoft.kiota.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.kiota</groupId>
			<artifactId>microsoft-kiota-serialization-text</artifactId>
			<version>${microsoft.kiota.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.kiota</groupId>
			<artifactId>microsoft-kiota-serialization-form</artifactId>
			<version>${microsoft.kiota.version}</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.kiota</groupId>
			<artifactId>microsoft-kiota-serialization-multipart</artifactId>
			<version>${microsoft.kiota.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api-incubator</artifactId>
			<version>1.44.1-alpha</version>
		</dependency>
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc11</artifactId>
			<version>23.6.0.24.10</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>7.10.2</version>
		</dependency>
		<dependency>
			<groupId>io.github.bhecquet</groupId>
			<artifactId>squash-tm-java-client</artifactId>
			<version>1.0.17</version>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>7.0.0</version>
			<exclusions>
			    <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<dependency>
		    <groupId>org.seleniumhq.selenium</groupId>
		    <artifactId>htmlunit3-driver</artifactId>
		    <version>${htmlunitdriver.version}</version>
		    <exclusions>
		    	<exclusion>
			      <artifactId>commons-logging</artifactId>
			      <groupId>commons-logging</groupId>
			    </exclusion>
			    <exclusion>
		            <groupId>org.apache.commons</groupId>
		            <artifactId>commons-text</artifactId>
                </exclusion>
		    </exclusions>
		</dependency>
		<dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.13.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-engine-core</artifactId>
			<version>2.4.1</version>
		</dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
        </dependency>
		<dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-testng</artifactId>
            <version>7.20.1</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-java</artifactId>
		    <version>7.20.1</version>
        </dependency>
        <dependency>
			<groupId>org.openpnp</groupId>
			<artifactId>opencv</artifactId>
			<version>3.2.0-1</version>
			<!-- <version>3.4.2-1</version> -->
		</dependency>
		<dependency>
		    <groupId>com.github.javaparser</groupId>
		    <artifactId>javaparser-core</artifactId>
		    <version>3.26.3</version>
		</dependency>
		<dependency>
		    <groupId>net.openhft</groupId>
		    <artifactId>compiler</artifactId>
		    <version>2.27ea0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>3.0.3</version>
		</dependency>
        
        <!-- Specific Neoload -->
        <dependency>
			<groupId>com.neotys.selenium</groupId>
			<artifactId>neotys-selenium-proxy</artifactId>
		</dependency>

        <dependency>
        	<groupId>org.ini4j</groupId>
        	<artifactId>ini4j</artifactId>
        	<version>0.5.4</version>
        </dependency>
        <dependency>
        	<groupId>org.aspectj</groupId>
        	<artifactId>aspectjrt</artifactId>
        	<version>${aspectj.version}</version>
        </dependency>
        <dependency>
        	<groupId>org.aspectj</groupId>
        	<artifactId>aspectjweaver</artifactId>
        	<version>${aspectj.version}</version>
        </dependency>
        <dependency>
			<groupId>net.ricecode</groupId>
			<artifactId>string-similarity</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
        	<groupId>org.jdom</groupId>
        	<artifactId>jdom2</artifactId>
        	<version>2.0.6.1</version>
        </dependency>
		<!-- pour cucumber -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>5.3.16</version>
		</dependency>
        <dependency>
	        <groupId>org.sonarsource.java</groupId>
	        <artifactId>sonar-jacoco-listeners</artifactId>
	        <version>5.14.0.18788</version>
	        <scope>test</scope>
        </dependency>
        <dependency> 
	      <groupId>org.mockito</groupId>
	      <artifactId>mockito-core</artifactId>
	      <version>5.15.2</version>
	    </dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-testng</artifactId>
			<version>0.5.2</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>11.0.24</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>11.0.24</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>seleniumRobot</finalName>
		<plugins>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.10.0.2594</version>
				<configuration>
					<detail />
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.13</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
                    <stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>
					
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId><!-- phase: prepare-package-->
				<version>3.6.1</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<id>copy aspectjweaver</id>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<stripVersion>true</stripVersion>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>compile</includeScope>
							<includeArtifactIds>aspectjweaver</includeArtifactIds>
						</configuration>
					</execution>
				</executions>
		      </plugin>
			<!-- Put Jacoco plugin before clirr plugin, as they are bound to the same phase 'verify' and clirr may recompile classes which annoys Jacoco -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId><!-- phase: verify -->
				<version>${jacoco.version}</version>

				<executions>
					<!-- comment for online instrumentation -->
					<!--<execution>
						<id>default-instrument</id>
						<goals>
							<goal>instrument</goal>
						</goals>
					</execution>
					<execution>
						<id>default-restore-instrumented-classes-it</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>restore-instrumented-classes</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<phase>verify</phase>
						<configuration>
							<excludes>
								<exclude>org/openqa/**/*</exclude>
							</excludes>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.build.directory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>report-it</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
						<phase>verify</phase>
						<configuration>
							<excludes>
								<exclude>org/openqa/**/*</exclude>
							</excludes>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
							<outputDirectory>${project.build.directory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>-->
					<!-- /comment -->
					<execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>

                        </configuration>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId> <!-- phase: compile et test-compile -->
				<version>3.11.0</version>
				<configuration>
					<encoding>utf-8</encoding>
					<source>17</source>
					<target>17</target>
					<!-- https://stackoverflow.com/questions/26817884/netbeans-and-bad-service-configuration-file-or-exception-thrown-while-construct-->
<!--					<compilerArgument>-proc:none</compilerArgument>-->
					<compilerArgs>
						<arg>--add-modules</arg>
						<arg>java.desktop</arg>
						<arg>--patch-module=java.annotation=jsr305-3.0.2.jar</arg>
					</compilerArgs>
				</configuration>
				
			</plugin>
			<plugin>
			    <artifactId>maven-antrun-plugin</artifactId>  <!-- phase: generate-source -->
			    <version>3.1.0</version>
			    <executions>
			        <execution>
			            <phase>generate-sources</phase>
			            <configuration>
			                <target>
			                    <echo file="${project.basedir}/target/classes/core-version.txt">${project.version}</echo>
			                </target>
			            </configuration>
			            <goals>
			                <goal>run</goal>
			            </goals>
			        </execution>
			    </executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>  <!-- phase: test -->
				<version>3.2.1</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>data/core/testng/tu.xml</suiteXmlFile>
					</suiteXmlFiles>
					<skipTests>${skipUTs}</skipTests>
					<useModulePath>false</useModulePath>
					<properties>
						<property>
							<name>usedefaultlisteners</name>
							<value>false</value>
						</property>
						<property>
							<name>testnames</name>
							<value>${testng.utTestnames}</value>
						</property>
					</properties>
					<argLine>
						@{surefireArgLine}
						--add-opens=java.base/java.lang=ALL-UNNAMED
						--add-opens=java.base/java.util=ALL-UNNAMED
						--add-opens=java.base/java.time=ALL-UNNAMED <!-- for GSON -->
						--add-opens jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED <!-- for https://github.com/OpenHFT/Java-Runtime-Compiler/issues/91 -->

					</argLine>

					
				<!-- comment for online instrumentation -->
<!--					<systemPropertyVariables>-->
<!--                        <jacoco-agent.destfile>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco-agent.destfile>-->
<!--                        <mavenExecution>true</mavenExecution>-->
<!--					</systemPropertyVariables>-->
				<!-- /comment -->
				<!-- uncomment for online instrumentation -->
<!--					<argLine>${surefireArgLine}</argLine>-->
					<systemPropertyVariables>
                        <mavenExecution>true</mavenExecution>
					</systemPropertyVariables>
				<!-- /uncomment -->
					<threadCount>1</threadCount>
				</configuration>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>  <!-- phase: integration-test et verify-->
				<version>3.2.1</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
                	<skipITs>${skipITs}</skipITs>
					<useModulePath>false</useModulePath>
                	<!-- comment for online instrumentation -->
<!--					<systemPropertyVariables>-->
<!--                        <jacoco-agent.destfile>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco-agent.destfile>-->
<!--                        <mavenExecution>true</mavenExecution>-->
<!--					</systemPropertyVariables>-->
<!--					<argLine>&#45;&#45;add-opens=java.base/java.lang=ALL-UNNAMED-->
<!--						&#45;&#45;add-opens=java.base/java.util=ALL-UNNAMED-->
<!--						&#45;&#45;add-opens=java.base/java.time=ALL-UNNAMED-->
<!--						&#45;&#45;add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED-->
<!--						${argLine}-->
<!--						-Ddebug=${seleniumRobot.debug}-->
<!--						-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"</argLine>-->
				<!-- /comment -->
				<!-- uncomment for online instrumentation -->
					 <argLine>
						 --add-opens=java.base/java.lang=ALL-UNNAMED
						 --add-opens=java.base/java.util=ALL-UNNAMED
						 --add-opens=java.base/java.time=ALL-UNNAMED
						 --add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED
						 @{failsafeArgLine}
						 -Ddebug=${seleniumRobot.debug}
						 -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"</argLine>
					 <systemPropertyVariables>
                        <mavenExecution>true</mavenExecution>
						<salesforceProxyType>autodetect</salesforceProxyType> <!-- allow execution of Salesforce tests behind proxy -->
					</systemPropertyVariables>
				<!-- /uncomment -->
				
				</configuration>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<suiteXmlFiles>
								<suiteXmlFile>data/core/testng/ti.xml</suiteXmlFile>
							</suiteXmlFiles>
							<properties>
								<property>
									<name>usedefaultlisteners</name>
									<value>false</value>
								</property>
								<property>
									<name>testnames</name>
									<value>${testng.testnames}</value>
								</property>
							</properties>
						</configuration>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
    		</plugin>
            <plugin>
				<groupId>dev.aspectj</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>  <!-- phase: compile / test-compile -->
				<version>1.13.1</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
			            <artifactId>aspectjtools</artifactId>
			            <version>${aspectj.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<complianceLevel>17</complianceLevel>
					<source>17</source>
					<target>17</target>
					<showWeaveInfo>false</showWeaveInfo>
					<Xlint>unmatchedSuperTypeInCall=ignore</Xlint>
					<weaveDependencies>
			            <weaveDependency>
			              <groupId>org.seleniumhq.selenium</groupId>
			              <artifactId>selenium-api</artifactId>
			            </weaveDependency>
			            <weaveDependency>
			              <groupId>org.seleniumhq.selenium</groupId>
			              <artifactId>selenium-remote-driver</artifactId>
			            </weaveDependency>
			            <weaveDependency>
			              <groupId>org.seleniumhq.selenium</groupId>
			              <artifactId>selenium-support</artifactId>
			            </weaveDependency>
		            </weaveDependencies>
				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>     
						</goals>
					</execution>
					<execution>
						<id>test-compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>test-compile</goal>     
						</goals>
						<configuration>
						
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
				<artifactId>maven-assembly-plugin</artifactId>  <!-- phase: package -->
				<version>3.6.0</version>
				<dependencies>
					<dependency>
						<groupId>${project.groupId}</groupId>
						<artifactId>${project.artifactId}</artifactId>
						<version>${project.version}</version>
					</dependency>
	        	</dependencies>
				<executions>
				    <execution>
				    	<id>archive</id> 
				    	<phase>package</phase>
				    	<goals>
							<goal>single</goal> 
				      	</goals>
				      	<configuration>
				      		<finalName>seleniumRobot-${project.artifactId}</finalName>
				      		<appendAssemblyId>false</appendAssemblyId>
				     		<archiveBaseDirectory>${project.build.directory}</archiveBaseDirectory>
				     		<outputDirectory>${project.build.directory}</outputDirectory>
				     		<descriptorRefs>
		                		<descriptorRef>archiveArtifact</descriptorRef>
		              		</descriptorRefs>
				      	</configuration>
				  	</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>  <!-- phase: process-resources / process-test-resources -->
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>process-test-resources</phase>
						<configuration>
							<overwrite>true</overwrite>
						</configuration>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
					<execution>
						<id>copy-plugins</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/plugins</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/plugins</directory>
								</resource>
							</resources>
						</configuration>            
					</execution>
					<execution>
						<id>copy-data</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/data/core</outputDirectory>
							<resources>
							
								<resource>
									<directory>src/main/resources/data/core</directory>
								</resource>
								<resource>
									<directory>${project.basedir}/data/core</directory>
								</resource>
							</resources>
						</configuration>            
					</execution>
					<execution>
						<id>copy-launcher</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/tools</directory>
									<include>launch.bat</include>
								</resource>
							</resources>
						</configuration>            
					</execution>
				</executions>
				<configuration>
					<includeEmptyDirs>true</includeEmptyDirs>
					
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>  <!-- phase: package -->
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId> <!-- phase: package -->
				<version>3.3.0</version>
				<configuration>
					<skip>${skipJar}</skip>
					<finalName>seleniumRobot</finalName>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                			<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Add-Opens>java.base/java.lang java.base/java.util java.base/java.time jdk.compiler/com.sun.tools.javac.file</Add-Opens>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>  <!-- phase: package -->
				<version>3.6.0</version>
				<configuration>
			      <source>17</source>
					<skip>${skipJavadoc}</skip>
			    </configuration> 
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration> <!-- disable checking for java 8 -->
							<additionalOptions>
								<additionalOption>-Xdoclint:none</additionalOption>
							</additionalOptions>
							<legacyMode>true</legacyMode>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId> <!-- phase: verify -->
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
						<configuration>
			              <keyname>${gpg.keyname}</keyname>
			              <passphraseServerId>${gpg.keyname}</passphraseServerId>
			              
			            </configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.4.5</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-release-plugin</artifactId> <!-- phase: release -->
		        <version>3.0.1</version>
		        <configuration>
		        	<arguments>${proxyString}</arguments>
		        </configuration>
			</plugin>
		    <plugin> 
		      	<groupId>com.mycila</groupId>
		      	<artifactId>license-maven-plugin</artifactId>
		      	<version>4.3</version>
		      	<configuration>
		      		<header>${project.basedir}/../doc/license_header.txt</header>
		      		
		      		<includes>
		      			<include>**/*.java</include>
		      			<include>**/*.aj</include>
		      		</includes>
		      	</configuration>
		   	</plugin>
        </plugins>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<resources>
			<resource>
		    	<directory>src/main/resources</directory>
		    </resource>
		</resources>
	</build>
</project>
