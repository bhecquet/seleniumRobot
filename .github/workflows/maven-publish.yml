# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish release

on: workflow_dispatch
  #release:
  #  types: [created]
    
  

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
    #- name: Set up Java for publishing to Maven Central Repository
    #  uses: actions/setup-java@v4
    #  with:
    #    java-version: '21'
    #    distribution: 'temurin'
    #    #server-id: ossrh
    #    #server-username: MAVEN_USERNAME
    #    #server-password: MAVEN_PASSWORD
    #    #gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
    #    #gpg-passphrase: MAVEN_GPG_PASSPHRASE 
    #- name: Cache Maven packages
    #  uses: actions/cache@v1
    #  with:
    #    path: ~/.m2
    #    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    #    restore-keys: ${{ runner.os }}-m2
    #- name: maven-settings-xml-action
    #  uses: whelk-io/maven-settings-xml-action@v22
    #  with:
    #    servers: '[{ "id": "ossrh", "username": "${{ secrets.MAVEN_USERNAME }}", "password": "${{ secrets.MAVEN_PASSWORD }}" }]'
    #- name: Build with Maven
    #  run: mvn -B package -Dmaven.test.skip=true --file pom.xml
    - name: Release
      uses: qcastel/github-actions-maven-release@v1.12.41
      env:
        JAVA_HOME: /usr/lib/jvm/java-21-openjdk/
      with:
        git-release-bot-name: "Robot"
        git-release-bot-email: "robot@seleniumRobot.com"
        maven-args: "-Dmaven.test.skip=true"
        gpg-enabled: "true"
        gpg-key-id: ${{ secrets.MAVEN_GPG_KEY_ID }}
        gpg-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }} 


    #- name: Publish to the Maven Central Repository
    #  run: mvn release:prepare release:perform  -Darguments="-Dmaven.test.skip=true -Dgpg.passphraseEnvName=MAVEN_GPG_PASSPHRASE -Dgpg.keyEnvName=MAVEN_GPG_KEY"  -Dusername=git -Dpassword=${{ secrets.GITHUB_TOKEN }}
    #  env:
    #    MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
    #    MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
    #    MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
    #    MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
